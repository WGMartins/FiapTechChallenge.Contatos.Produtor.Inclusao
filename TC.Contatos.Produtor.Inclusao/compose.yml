networks:
  kong-net:
    driver: bridge
  mynw:
    driver: bridge
services:
  # web_api:
  #  environment:
  #    - ASPNETCORE_ENVIRONMENT=Development
  #  container_name: TechApi
  #  build: .
  #  ports:
  #    - 5075:8080
  #  depends_on:
  #    - "db"
  #  networks:
  #    - mynw
  db:
    image: postgres
    container_name: postgres_db
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: 102030
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - mynw
  rabbitmq:
    hostname: 'mrabbit'
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
        - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq

  kong-db:
    image: postgres:latest
    container_name: kong-db
    networks:
      - kong-net
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: kong
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: on-failure

  kong-migrations:
    image: kong/kong-gateway:latest
    command: kong migrations bootstrap
    container_name: kong-migrations
    networks:
      - kong-net
    depends_on:
      kong-db:
        condition: service_healthy
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-db
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
    restart: on-failure

  kong-ce:
    image: kong/kong-gateway:latest
    container_name: kong
    networks:
      - kong-net
    restart: on-failure
    depends_on:
      kong-db:
        condition: service_healthy
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-db
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PROXY_LISTEN: 0.0.0.0:8000, 0.0.0.0:8443 ssl
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
      KONG_ADMIN_GUI_PATH: '/'
      KONG_ADMIN_GUI_URL: "http://localhost:8002/manager"
     
    healthcheck:
      test: ["CMD", "curl", "-f", "http://kong-ce:8001"]
      interval: 5s
      timeout: 2s
      retries: 10

    ports:
      - "8000-8001:8000-8001/tcp"
      - "8002:8002"
      - "8443:8443"
      - "8444:8444"
 

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - 9090:9090
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yaml
      - ./data:/prometheus      
    restart: unless-stopped
    networks:
      - mynw
  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
      - '3000:3000'
    volumes:
      - grafana-data:/var/lib/grafana
    restart: unless-stopped
    networks:
      - mynw
volumes:
  postgres_data:
  prometheus-data:
    driver: local
  grafana-data:
    driver: local  
